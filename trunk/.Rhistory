label
datamap <- data.frame(Class=class, Label=label)
datamap
datamap$Class[24]
datamap$Class[24] <- COLON
datamap$Class[24] <- as.factor(COLON)
datamap$Class[24] <- "COLON"
datamap
sub("PD", datamap$Class, "")
sub(pattern="PD", x=datamap$Class, replacement="")
datamap$Class <- sub(pattern="PD", x=datamap$Class, replacement="")
datamap
write.table(datamap, file="CancerDataMap.txt", sep="\t")
q()
normals <- which(ycandat$Label == "N")
candat <- read.table("brownboost/data/CanDat.txt", header=T, sep="\t")
candat
names(candat)
ycandat
datamap <- read.table("brownboost/data/CancerDataMap.txt", header=t, sep="\t")
datamap <- read.table("brownboost/data/CancerDataMap.txt", header=T, sep="\t")
datamap
datamap <- datamap[-1,]
datamap <- datamap[-1,]
datamap[1,]
norms <- which(datamap$Label == "N")
tumors <- which(datamap$Label != "N" & !is.na(datamap$Label))
both <- c(norms, tumors)
both
save.image()
savehistory()
y <- c()
y[norms] <- 0
y[tumors] <- 1
y
candati <- cbind(candat, Class=y)
y[which(is.na(datamap$Label))] <- NA
y
length(y)
candati <- cbind(candat, Class=y)
save.image()
savehistory()
ls()
y
which(y == 0)
y[which(y == 0)
] <- -1
y
candati$Class
candati$Class[candati$Class == 0]
candati$Class[which(candati$Class == 0)]
candati$Class[which(candati$Class == 0)] <- -1
candati$Class
both
save.image()
savehistory()
source("brownboost/R/RunBinaryBrownBoost.R")
randomBinaryBrownBoost(data=candati, c=2, v=both)
source("brownboost/R/RunBinaryBrownBoost.R")
randomBinaryBrownBoost(data=candati, c=2, v=both)
source("brownboost/R/RunBinaryBrownBoost.R")
randomBinaryBrownBoost(data=candati, c=2, v=both)
bot
sample(both, replace=F, size = 0.8 * length(both))
!sample(both, replace=F, size = 0.8 * length(both)) %in% both
which(!sample(both, replace=F, size = 0.8 * length(both)) %in% both
)
which(!sample(both, replace=F, size = 0.8 * length(both)) %in% both)
which(!both %in% sample(both, replace=F, size = 0.8 * length(both)))
which(!both %in% sample(both, replace=F, size = 0.8 * length(both)))
candati$Class[both]
save.image()
savehistory()
randomBinaryBrownBoost(data=candati, c=2, v=both)
source("brownboost/R/RunBinaryBrownBoost.R")
randomBinaryBrownBoost(data=candati, c=2, v=both)
source("brownboost/R/RunBinaryBrownBoost.R")
both
candati$Class[both]
candati$Class
source("brownboost/R/RunBinaryBrownBoost.R")
randomBinaryBrownBoost(data=candati, c=2, v=both)
source("brownboost/R/RunBinaryBrownBoost.R")
which(!both %in% sample(both, replace=F, size = 0.8 * length(both)))
candati$Class[which(!both %in% sample(both, replace=F, size = 0.8 * length(both)))]
candati$Class[which(!both %in% sample(both, replace=F, size = 0.8 * length(both)))]
candati$Class[which(!both %in% sample(both, replace=F, size = 0.8 * length(both)))]
candati$Class[which(!both %in% sample(both, replace=F, size = 0.8 * length(both)))]
candati$Class[which(!both %in% sample(both, replace=F, size = 0.8 * length(both)))]
candati$Class[which(!both %in% sample(both, replace=F, size = 0.8 * length(both)))]
candati$Class[which(!both %in% sample(both, replace=F, size = 0.8 * length(both)))]
candati$Class[both]
candati$Class[tumors]
candati$Class[norms]
s <- sample(both, replace=F, size = 0.8 * length(both))
s
candati$Class[s]
s %in% both
both %in% s
length(both %in% s)
length(both)
!(both %in% s
)
which(!(both %in% s)
)
candati$Class[which(!(both %in% s))
]
testmatrix[-which(apply(testmatrix,1,function(x)all(is.na(x)))),-which(apply(testmatrix,2,function(x)all(is.na(x))))]
candat <- candati[-which(is.na(candati$Class)),] 
candat$Class
source("brownboost/R/RunBinaryBrownBoost.R")
s
s <- s[-c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)]
s
randomBinaryBrownBoost(data=candati, c=2)
source("brownboost/R/RunBinaryBrownBoost.R")
randomBinaryBrownBoost(data=candati, c=2)
randomBinaryBrownBoost(data=candat, c=2)
q()
source("brownboost/R/RunBinaryBrownBoost.R"
)
varyCBinaryBrownBoost(candat)
q()
ls()
dataMap <- read.table("brownboost/data/TissueDataMap.txt", header=T)
dataMap
dataMap <- datamap[which(!is.na(datamap[,1])),]
dataMap
dataMap
dataMap <- read.table("brownboost/data/TissueDataMap.txt", header=T)
dataMap
dataMap <- datamap[which(!is.na(datamap[,1])),1:3]
dataMap <- dataMap[which(!is.na(datamap[,1])),1:3]
datamap
rm(datamap)
dataMap
dataMap <- dataMap[which(!is.na(datamap[,3])),1:3]
dataMap <- dataMap[which(!is.na(dataMap[,1])),1:3]
dataMap
tissueData <- candat[which(!is.na(candat)),]
tissueData
x
tissueData <- candat[which(!is.na(candat[,1])),]
names(tissueData)
tissueData <- tissueData[,-284]
names(tissueData)
row(dataMap)
dataMap
row.names(dataMap)
tissueData[row.names(dataMap),]
tissueData <- tissueData[row.names(dataMap),]
length(tissueData[,1])
tissueData <- cbind(tissueData, Class=dataMap$Class)
names(tissueData)
tissueData[1,]
all(is.na(tissueData[1,]))
all(is.na(tissueData[,1]))
save.image()
savehistory()
source("brownboost/R/MultiBrownBoost.R")
savehistory()
ls()
tissueData <- tissueData[,-1]
tissueData[,1]
tissueData[,284]
tissueData[,283]
tissueData[,282]
save.image()
savehistory()
ls()
dataMap
pdts <- c(25, 84:86, 116:123, 145:148, 220)
pdts
length(pdts
)
tissueData[pdts,]
dataMap[pdts,]
dataMap[pdts,]
dataMap
dataMap[220,]
pdts
length(dataMap)
length(dataMap[,1])
which(row.names(dataMap) == 220)
dataMap[c(pdts, 177),]
pdts
which(row.names(dataMap) == pdts)
which(row.names(dataMap) %in% pdts)
dataMap[which(row.names(dataMap) %in% pdts),]
pdtMap <- dataMap[which(row.names(dataMap) %in% pdts),]
pdtMap
dataMap
tissueData[,c(1, 283)]
candat
candat[1,]
candat[,1]
length(candat[,1])
length(dataMap)
length(dataMap[,3])
which(row.names(candat) %in% dataMap[,1])
which(row.names(candat) %in% row.names(dataMap))
tissueRows <- which(row.names(candat) %in% row.names(dataMap))
length(tissueData[,1])
length(dataMap)
length(dataMap[,3])
q()
ls()
pdtMap
ls()
dataMap
which(dataMap$Label == "T")
dataMap[which(dataMap$Label == "T"),]
tumors <- dataMap[which(dataMap$Label == "T"),]
tumors
pdts
pdtMap
tumorMap <- tumors
tumorMap
pdtMap
trainingPDT <- candat[which(row.names(candat) %in% row.names(pdtMap)),]
trainingPDT
trainingPDT <- tissueData[which(row.names(tissueData) %in% row.names(pdtMap)),]
trainingPDT
trainingPDT$Class
pdtMap
testPDT <- tissueData[which(row.names(tissueData) %in% row.names(pdtMap)),]
trainingPDT <- tissueData[which(row.names(tissueData) %in% row.names(tumorMap)),]
trainingPDT$Class
trainingPDT$Class %in% tumorMap[,3]
all(trainingPDT$Class %in% tumorMap[,3])
save.image()
savehistory()
trainingReducedPDTset <- which(tissueData$Class == 2 | tissueData$Class == 7 | tissueData$Class == 9 | tissueData$Class == 11 | tissueData$Class == 15)
trainingPDT <- tissueData[trainingReducedPDTset, ]
save.image()
savehistory()
ls()
rm(list=ls())
ls()
tiss <- read.table("tissueData.txt", header=T)
pdts <- read.table("pdtData.txt", header=T)
save.image()
source("brownboost/R/MultiBrownBoost.R")
savehistory(
)
ls()
alltiss <- read.table("AllTissueData.txt", header=T)
names(alltiss)
tissmap <- read.table("brownboost/data/TissueDataMap.txt", header=T)
tissmap[1:10]
tissmap[1:10,]
tissmap <- tissmap[-c(1,2),]
head(tissmap)
which(tissmap$Class %in% c(2,3,4,5,6,7,8,9,11))
tissmap[which(tissmap$Class %in% c(2,3,4,5,6,7,8,9,11)),3]
tissmap[which(tissmap$Class %in% c(2,3,4,5,6,7,8,9,11)),]
classes <- tissmap[which(tissmap$Class %in% c(2,3,4,5,6,7,8,9,11)),3]
length(classes)
length(alltiss[,1])
alltiss <- cbind(alltiss, Class=classes)
write.table(alltiss, file="AllTissueData.txt", sep="\t")
s <- sample(1:117, size=17, replace=F)
alltiss$Class[s]
s <- sample(1:117, size=17, replace=F)
alltiss$Class[s]
s <- sample(1:117, size=17, replace=F)
alltiss$Class[s]
s <- sample(1:117, size=17, replace=F)
alltiss$Class[s]
s <- sample(1:117, size=17, replace=F)
alltiss$Class[s]
s <- sample(1:117, size=17, replace=F)
alltiss$Class[s]
s <- sample(1:117, size=17, replace=F)
alltiss$Class[s]
s <- sample(1:117, size=17, replace=F)
alltiss$Class[s]
s <- sample(1:117, size=17, replace=F)
alltiss$Class[s]
s <- sample(1:117, size=17, replace=F)
alltiss$Class[s]
s <- sample(1:117, size=17, replace=F)
alltiss$Class[s]
s <- sample(1:117, size=17, replace=F)
alltiss$Class[s]
s <- sample(1:117, size=17, replace=F)
alltiss$Class[s]
alltiss
alltiss$Class
?split
split(alltiss, alltiss$Class)
alltisssplit <- split(alltiss, alltiss$Class)
alltisssplit$11
alltisssplit$`11`
alltisssplit[[11]]
alltisssplit[["11"]]
alltisssplit[["11"]]$Class
rm(alltisssplit)
s <- sample(1:117, size=17, replace=F)
alltiss$Class[s]
s
ls()
t <- which(! 1:117 %in% s)
t
length(t)
length(s)
s
t
history(100)
ls()
source("brownboost/R/MultiBrownBoost.R")
result <- bbMultiTestSet(alltiss[t,], alltiss[s,], 3)
ls()
result
alltiss[t,]
alltiss[t,]$Class
alltiss[s,]$Class
result
 [1]  8  6  6  8  7  2 11 11  4  6  8  3  5  8  9  7  9
ls()
length(alltiss[,1])
?norm
normalize <- function(v) {
m <- mean(v)
s <- sd(v)
v <- (v*m)/s
return(v)
}
x
x <- c(5,2,1,6,7,4,3,3,6,8)
x
normalize(x)
mean(x0
)
mean(x)
sd(x)
normalize <- function(v) {
m <- mean(v)
s <- sd(v)
v <- (v-m)/s
return(v)
}
normalize(x)
x
?sd
result <- bbMultiTestSet(alltiss[t,], alltiss[s,], 4)
result
q()
ls()
source("brownboost/R/MultiBrownBoost.R")
bbMultiRun(trainset=alltiss[t,], testset=alltiss[s,], 3)
source("brownboost/R/MultiBrownBoost.R")
bbMultiRun(trainset=alltiss[t,], testset=alltiss[s,], 3)
source("brownboost/R/MultiBrownBoost.R")
bbMultiRun(trainset=alltiss[t,], testset=alltiss[s,], 3)
source("brownboost/R/MultiBrownBoost.R")
me <- bbMultiRun(trainset=alltiss[t,], testset=alltiss[s,], 3)
source("brownboost/R/MultiBrownBoost.R")
bbMultiResult(alltiss[s,], me)
source("brownboost/R/MultiBrownBoost.R")
bbMultiResult(alltiss[s,], me)
source("brownboost/R/MultiBrownBoost.R")
bbMultiResult(alltiss[s,], me)
source("brownboost/R/MultiBrownBoost.R")
bbMultiResult(alltiss[s,], me)
source("brownboost/R/MultiBrownBoost.R")
source("brownboost/R/MultiBrownBoost.R")
bbMultiResult(alltiss[s,], me)
source("brownboost/R/MultiBrownBoost.R")
bbMultiResult(alltiss[s,], me)
source("brownboost/R/MultiBrownBoost.R")
bbMultiResult(alltiss[s,], me)
source("brownboost/R/MultiBrownBoost.R")
bbMultiResult(alltiss[s,], me)
source("brownboost/R/MultiBrownBoost.R")
bbMultiRun(trainset=alltiss[t,], testset=alltiss[s,], 3)
results
result
ls()
result <- data.frame(1:5)
result
result <- cbind(result, c(5,32,1,6,2)
)
result <- cbind(result, c(7,3,4,1,5))
result <- cbind(result, c(13,6,3,0,7))
result
apply(result, 1, max)
source("brownboost/R/MultiBrownBoost.R")
bbMultiRun(trainset=alltiss[t,], testset=alltiss[s,], 3)
bbMultiRun(trainset=alltiss[t,], testset=alltiss[s,], 2)
source("brownboost/R/MultiBrownBoost.R")
source("brownboost/R/MultiBrownBoost.R")
source("brownboost/R/MultiBrownBoost.R")
bbMultiRun(trainset=alltiss[t,], testset=alltiss[s,], 1.5)
?lapply
source("brownboost/R/MultiBrownBoost.R")
bbMultiRun(trainset=alltiss[t,], testset=alltiss[s,], 1.5)
bbMultiRun(trainset=alltiss[t,], testset=alltiss[s,], 3)
source("brownboost/R/MultiBrownBoost.R")
bbMultiRun(trainset=alltiss[t,], testset=alltiss[s,], 3)
x <- c("a", "b", "c")
x
x[c(1,2,1)]
x[c(1,1,1)]
x[c(1,1,1, 1)]
source("brownboost/R/MultiBrownBoost.R")
bbMultiRun(trainset=alltiss[t,], testset=alltiss[s,], 3)
source("brownboost/R/MultiBrownBoost.R")
ls()
tumorTissue <- read.table("brownboost/data/tissueData.txt", header=T)
names(tumorTissue)
row.names(tumorTissue)
length(tumorTissue)
tumorMap <- read.table("brownboost/data/tissueMap.txt",header=T)
tumorMap
length(tumorTissue[,1])
row.names(tumorTissue)
tumorTissue$Class
bbMultiLeaveOneOut(tumorTissue, 3)
source("brownboost/R/MultiBrownBoost.R")
tumorLOOResult <- bbMultiLeaveOneOut(tumorTissue, 3)
source("brownboost/R/MultiBrownBoost.R")
tumorLOOResult <- bbMultiLeaveOneOut(tumorTissue, 3)
source("brownboost/R/MultiBrownBoost.R")
tumorLOOResult <- bbMultiLeaveOneOut(tumorTissue, 3)
ls()
tumorLOOResult
tloor <- as.numeric(tumorLOOResult)
tloor
tumorTissue$Class
table(tloor, tumorTissue$Class)
which(tloor == tumorTissue$Class)
length(which(tloor == tumorTissue$Class))/length(tloor)
q()
rm(list=ls())
q()
source("brownboost/R/BisectionDESolver.R")
fPlotter()
source("brownboost/R/BisectionDESolver.R")
fPlotter()
source("brownboost/R/BisectionDESolver.R")
fPlotter()
par(main="Solutions to the brownboost function pair for Z = {-10 .. 10,  -10 .. 10}"
)
source("brownboost/R/BisectionDESolver.R")
source("brownboost/R/BisectionDESolver.R")
source("brownboost/R/BisectionDESolver.R")
fPlotter()
dev.copy2pdf()
source("brownboost/R/BisectionDESolver.R")
fPlotter2()
dev.copy2pdf()
fPlotter2()
source("brownboost/R/BisectionDESolver.R")
fPlotter2()
dev.copy2pdf()
source("brownboost/R/BisectionDESolver.R")
fPlotter2()
dev.copy2pdf()
q()
ls()
seq(0.1, 1, 0.01)
sample(seq(1, 100, 2), 1)
sample(seq(1, 100, 2), 1)
sample(seq(1, 100, 2), 1)
sample(seq(1, 100, 2), 1)
sample(seq(1, 100, 2), 1)
sample(seq(1, 100, 2), 1)
sample(seq(1, 100, 3), 1)
sample(seq(1, 100, 3), 1)
sample(seq(1, 100, 3), 1)
sample(seq(1, 100, 3), 1)
sample(seq(1, 100, 3), 1)
rm(list=ls()
)
ls()
q()
source("brownboost/R/SolverWrapper.R")
createDataSet()
createDataSet()
createDataSet()
createDataSet()
createDataSet()
createDataSet()
createDataSet()
source("brownboost/R/SolverWrapper.R")
d <- createDataSet()
 <- data.frame(x=1, y=2)
 d <- data.frame(x=1, y=2)
d
source("brownboost/R/SolverWrapper.R")
d <- createDataSet()
write.table(d, file="dtable.txt", sep="\t", row.names=F)
warnings()
source("brownboost/R/SolverWrapper.R")
d <- createDataSet()
source("brownboost/R/SolverWrapper.R")
d <- createDataSet()
d
source("brownboost/R/SolverWrapper.R")
d2 <- createDataSet(100)
d3 <- createDataSet(500)
ls()
d2
d3
save.image()
d5 <- createDataSet(500)
ls()
datatable <- rbind(d, d2, d3, d5)
dim(datatable)
write.table(datatable, file="full_function_table.csv", sep=",", quote=F, row.names=F)
q()
